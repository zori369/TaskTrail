{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GRIGS\\\\Desktop\\\\TaskTrail\\\\TaskTrail---REACT\\\\src\\\\Pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../App.scss';\nimport TaskList from '../Components/TaskList';\nimport SortTasks from '../Components/SortTasks';\nimport FilterTasks from '../Components/FilterTasks';\nimport AddNewTask from '../Components/AddNewTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage({\n  filteredTasks,\n  setFilteredTasks\n}) {\n  _s();\n  const [isAddNewTaskOpen, setIsAddNewTaskOpen] = useState(false);\n  const toggleAddNewTask = () => {\n    setIsAddNewTaskOpen(prevState => !prevState);\n  };\n\n  // Debugging: Log filteredTasks changes\n  useEffect(() => {\n    console.log(\"Filtered tasks updated:\", filteredTasks);\n  }, [filteredTasks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home__page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"header__title\",\n        children: \"Your Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button--generic\",\n        onClick: toggleAddNewTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page__filters\",\n      children: [/*#__PURE__*/_jsxDEV(FilterTasks, {\n        setFilteredTasks: setFilteredTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SortTasks, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page__content\",\n      children: [/*#__PURE__*/_jsxDEV(TaskList, {\n        status: \"open\",\n        filteredTasks: filteredTasks,\n        setFilteredTasks: setFilteredTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        status: \"in-progress\",\n        filteredTasks: filteredTasks,\n        setFilteredTasks: setFilteredTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        status: \"done\",\n        filteredTasks: filteredTasks,\n        setFilteredTasks: setFilteredTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), isAddNewTaskOpen && /*#__PURE__*/_jsxDEV(AddNewTask, {\n      toggleModal: toggleAddNewTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(HomePage, \"DtI9uctZYFK45TB4qieEIIzxZ2I=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","TaskList","SortTasks","FilterTasks","AddNewTask","jsxDEV","_jsxDEV","HomePage","filteredTasks","setFilteredTasks","_s","isAddNewTaskOpen","setIsAddNewTaskOpen","toggleAddNewTask","prevState","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","status","toggleModal","_c","$RefreshReg$"],"sources":["C:/Users/GRIGS/Desktop/TaskTrail/TaskTrail---REACT/src/Pages/HomePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../App.scss';\nimport TaskList from '../Components/TaskList';\nimport SortTasks from '../Components/SortTasks';\nimport FilterTasks from '../Components/FilterTasks';\nimport AddNewTask from '../Components/AddNewTask';\n\nfunction HomePage({ filteredTasks, setFilteredTasks }) {\n    const [isAddNewTaskOpen, setIsAddNewTaskOpen] = useState(false);\n\n    const toggleAddNewTask = () => {\n        setIsAddNewTaskOpen((prevState) => !prevState);\n    };\n\n    // Debugging: Log filteredTasks changes\n    useEffect(() => {\n        console.log(\"Filtered tasks updated:\", filteredTasks);\n    }, [filteredTasks]);\n\n    return (\n        <div className=\"home__page\">\n            <div className=\"page__header\">\n                <h1 className=\"header__title\">Your Tasks</h1>\n                <button className=\"button--generic\" onClick={toggleAddNewTask}>\n                    Add Task\n                </button>\n            </div>\n            <div className=\"page__filters\">\n                <FilterTasks setFilteredTasks={setFilteredTasks} />\n                <SortTasks />\n            </div>\n            <div className=\"page__content\">\n                <TaskList status=\"open\" filteredTasks={filteredTasks} setFilteredTasks={setFilteredTasks} />\n                <TaskList status=\"in-progress\" filteredTasks={filteredTasks} setFilteredTasks={setFilteredTasks} />\n                <TaskList status=\"done\" filteredTasks={filteredTasks} setFilteredTasks={setFilteredTasks} />\n            </div>\n            {isAddNewTaskOpen && <AddNewTask toggleModal={toggleAddNewTask} />}\n        </div>\n    );\n}\n\nexport default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}