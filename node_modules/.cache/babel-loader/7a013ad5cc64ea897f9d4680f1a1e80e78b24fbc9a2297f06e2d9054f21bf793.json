{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GRIGS\\\\Desktop\\\\React_project\\\\ReactAppTasks\\\\project\\\\src\\\\Context\\\\TaskContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskContext = /*#__PURE__*/createContext();\nexport const TaskProvider = ({\n  children\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const addTask = newTask => {\n    setTasks(prevTasks => {\n      const updatedTasks = prevTasks.filter(task => task.taskId !== newTask.taskId);\n      return [...updatedTasks, newTask];\n    });\n  };\n  const deleteTask = taskId => {\n    setTasks(prevTasks => prevTasks.filter(task => task.taskId !== taskId));\n  };\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      tasks,\n      addTask,\n      deleteTask\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskProvider, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n_c = TaskProvider;\nvar _c;\n$RefreshReg$(_c, \"TaskProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","TaskContext","TaskProvider","children","_s","tasks","setTasks","addTask","newTask","prevTasks","updatedTasks","filter","task","taskId","deleteTask","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/GRIGS/Desktop/React_project/ReactAppTasks/project/src/Context/TaskContext.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nexport const TaskContext = createContext();\r\n\r\nexport const TaskProvider = ({ children }) => {\r\n    const [tasks, setTasks] = useState([]);\r\n\r\n    const addTask = (newTask) => {\r\n        setTasks((prevTasks) => {\r\n            \r\n            const updatedTasks = prevTasks.filter((task) => task.taskId !== newTask.taskId);\r\n            return [...updatedTasks, newTask];\r\n        });\r\n    };\r\n\r\n    const deleteTask = (taskId) => {\r\n        setTasks((prevTasks) => prevTasks.filter(task => task.taskId !== taskId));\r\n    };\r\n\r\n    return (\r\n        <TaskContext.Provider value={{ tasks, addTask, deleteTask }}>\r\n            {children}\r\n        </TaskContext.Provider>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,OAAO,GAAIC,OAAO,IAAK;IACzBF,QAAQ,CAAEG,SAAS,IAAK;MAEpB,MAAMC,YAAY,GAAGD,SAAS,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,MAAM,KAAKL,OAAO,CAACK,MAAM,CAAC;MAC/E,OAAO,CAAC,GAAGH,YAAY,EAAEF,OAAO,CAAC;IACrC,CAAC,CAAC;EACN,CAAC;EAED,MAAMM,UAAU,GAAID,MAAM,IAAK;IAC3BP,QAAQ,CAAEG,SAAS,IAAKA,SAAS,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAKA,MAAM,CAAC,CAAC;EAC7E,CAAC;EAED,oBACIb,OAAA,CAACC,WAAW,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEX,KAAK;MAAEE,OAAO;MAAEO;IAAW,CAAE;IAAAX,QAAA,EACvDA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAChB,EAAA,CApBWF,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}