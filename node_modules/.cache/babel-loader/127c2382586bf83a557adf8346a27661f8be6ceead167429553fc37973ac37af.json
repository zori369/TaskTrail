{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GRIGS\\\\Desktop\\\\TaskTrail\\\\TaskTrail---REACT\\\\src\\\\Components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport '../App.scss';\nimport { useContext, useEffect } from 'react';\nimport TaskCard from './TaskCard.js';\nimport { TaskContext } from '../Context/TaskContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList({\n  status,\n  filteredTasks,\n  setFilteredTasks\n}) {\n  _s();\n  const {\n    tasks,\n    updateTaskStatus\n  } = useContext(TaskContext);\n  useEffect(() => {\n    if (setFilteredTasks) {\n      if (filteredTasks) {\n        const updatedFilteredTasks = tasks.filter(task => filteredTasks.some(ft => ft.taskId === task.taskId));\n        setFilteredTasks(updatedFilteredTasks);\n      }\n    }\n  }, [tasks, filteredTasks, setFilteredTasks]);\n  const displayedTasks = filteredTasks && filteredTasks.length > 0 ? filteredTasks : tasks.filter(task => task.status === status);\n\n  // Drag and Drop Handlers\n  const handleDragStart = (event, taskId) => {\n    console.log(\"Dragging task:\", taskId);\n    event.dataTransfer.setData('taskId', taskId);\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    const taskId = event.dataTransfer.getData('taskId');\n    console.log(\"Dropped task:\", taskId, \"to status:\", status);\n    updateTaskStatus(taskId, status);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task__list\",\n    onDragOver: handleDragOver,\n    onDrop: handleDrop,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"list__title\",\n      children: status === 'open' ? 'To Do' : status === 'in-progress' ? 'In Progress' : 'Done'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list__content\",\n      children: displayedTasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n        ...task,\n        onDragStart: event => handleDragStart(event, task.taskId)\n      }, task.taskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskList, \"a8lPIB0DU7Ht9kFXfmNDnwTDBIA=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["useContext","useEffect","TaskCard","TaskContext","jsxDEV","_jsxDEV","TaskList","status","filteredTasks","setFilteredTasks","_s","tasks","updateTaskStatus","updatedFilteredTasks","filter","task","some","ft","taskId","displayedTasks","length","handleDragStart","event","console","log","dataTransfer","setData","handleDragOver","preventDefault","handleDrop","getData","className","onDragOver","onDrop","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onDragStart","_c","$RefreshReg$"],"sources":["C:/Users/GRIGS/Desktop/TaskTrail/TaskTrail---REACT/src/Components/TaskList.js"],"sourcesContent":["\nimport '../App.scss';\nimport { useContext, useEffect } from 'react';\nimport TaskCard from './TaskCard.js';\nimport { TaskContext } from '../Context/TaskContext';\n\nfunction TaskList({ status, filteredTasks, setFilteredTasks }) {\n    const { tasks, updateTaskStatus } = useContext(TaskContext);\n\n    useEffect(() => {\n        if (setFilteredTasks) {\n            if (filteredTasks) {\n                const updatedFilteredTasks = tasks.filter((task) =>\n                    filteredTasks.some((ft) => ft.taskId === task.taskId)\n                );\n                setFilteredTasks(updatedFilteredTasks);\n            }\n        }\n    }, [tasks, filteredTasks, setFilteredTasks]);\n\n    const displayedTasks = filteredTasks && filteredTasks.length > 0\n        ? filteredTasks\n        : tasks.filter((task) => task.status === status);\n\n    // Drag and Drop Handlers\n    const handleDragStart = (event, taskId) => {\n        console.log(\"Dragging task:\", taskId);\n        event.dataTransfer.setData('taskId', taskId);\n    };\n\n    const handleDragOver = (event) => {\n        event.preventDefault();\n    };\n\n    const handleDrop = (event) => {\n        event.preventDefault();\n        const taskId = event.dataTransfer.getData('taskId');\n        console.log(\"Dropped task:\", taskId, \"to status:\", status);\n        updateTaskStatus(taskId, status);\n    };\n\n    return (\n        <div\n            className=\"task__list\"\n            onDragOver={handleDragOver}\n            onDrop={handleDrop}\n        >\n            <h2 className=\"list__title\">\n                {status === 'open' ? 'To Do' : status === 'in-progress' ? 'In Progress' : 'Done'}\n            </h2>\n            <div className=\"list__content\">\n                {displayedTasks.map((task) => (\n                    <TaskCard\n                        key={task.taskId}\n                        {...task}\n                        onDragStart={(event) => handleDragStart(event, task.taskId)}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default TaskList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}