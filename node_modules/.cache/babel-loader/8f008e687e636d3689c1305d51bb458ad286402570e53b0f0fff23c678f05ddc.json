{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GRIGS\\\\Desktop\\\\TaskTrail\\\\TaskTrail---REACT\\\\src\\\\Components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport '../App.scss';\nimport { useContext, useEffect } from 'react';\nimport TaskCard from './TaskCard.js';\nimport { TaskContext } from '../Context/TaskContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList({\n  status,\n  filteredTasks,\n  setFilteredTasks\n}) {\n  _s();\n  const {\n    tasks,\n    updateTaskStatus\n  } = useContext(TaskContext);\n  useEffect(() => {\n    if (setFilteredTasks) {\n      const updatedFilteredTasks = tasks.filter(task => task.status === status);\n      setFilteredTasks(updatedFilteredTasks);\n    }\n  }, [tasks, status, setFilteredTasks]);\n  const displayedTasks = tasks.filter(task => task.status === status);\n  console.log('TaskList Render:', {\n    status,\n    displayedTasks\n  });\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    const taskId = event.dataTransfer.getData('taskId');\n    console.log('Drop Event: Retrieved taskId', taskId, 'for status', status);\n    updateTaskStatus(taskId, status);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task__list\",\n    onDragOver: handleDragOver,\n    onDrop: handleDrop,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"list__title\",\n      children: status === 'open' ? 'To Do' : status === 'in-progress' ? 'In Progress' : 'Done'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list__content\",\n      children: displayedTasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n        ...task\n      }, task.taskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskList, \"a8lPIB0DU7Ht9kFXfmNDnwTDBIA=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["useContext","useEffect","TaskCard","TaskContext","jsxDEV","_jsxDEV","TaskList","status","filteredTasks","setFilteredTasks","_s","tasks","updateTaskStatus","updatedFilteredTasks","filter","task","displayedTasks","console","log","handleDragOver","event","preventDefault","handleDrop","taskId","dataTransfer","getData","className","onDragOver","onDrop","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["C:/Users/GRIGS/Desktop/TaskTrail/TaskTrail---REACT/src/Components/TaskList.js"],"sourcesContent":["import '../App.scss';\nimport { useContext, useEffect } from 'react';\nimport TaskCard from './TaskCard.js';\nimport { TaskContext } from '../Context/TaskContext';\n\nfunction TaskList({ status, filteredTasks, setFilteredTasks }) {\n    const { tasks, updateTaskStatus } = useContext(TaskContext);\n\n    useEffect(() => {\n        if (setFilteredTasks) {\n            const updatedFilteredTasks = tasks.filter((task) => task.status === status);\n            setFilteredTasks(updatedFilteredTasks);\n        }\n    }, [tasks, status, setFilteredTasks]);\n\n    const displayedTasks = tasks.filter((task) => task.status === status);\n    console.log('TaskList Render:', { status, displayedTasks });\n\n    const handleDragOver = (event) => {\n        event.preventDefault();\n    };\n\n    const handleDrop = (event) => {\n        event.preventDefault();\n        const taskId = event.dataTransfer.getData('taskId');\n        console.log('Drop Event: Retrieved taskId', taskId, 'for status', status);\n        updateTaskStatus(taskId, status);\n    };\n\n    return (\n        <div\n            className=\"task__list\"\n            onDragOver={handleDragOver}\n            onDrop={handleDrop}\n        >\n            <h2 className=\"list__title\">\n                {status === 'open' ? 'To Do' : status === 'in-progress' ? 'In Progress' : 'Done'}\n            </h2>\n            <div className=\"list__content\">\n                {displayedTasks.map((task) => (\n                    <TaskCard\n                        key={task.taskId}\n                        {...task}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default TaskList;"],"mappings":";;AAAA,OAAO,aAAa;AACpB,SAASA,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7C,OAAOC,QAAQ,MAAM,eAAe;AACpC,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,QAAQA,CAAC;EAAEC,MAAM;EAAEC,aAAa;EAAEC;AAAiB,CAAC,EAAE;EAAAC,EAAA;EAC3D,MAAM;IAAEC,KAAK;IAAEC;EAAiB,CAAC,GAAGZ,UAAU,CAACG,WAAW,CAAC;EAE3DF,SAAS,CAAC,MAAM;IACZ,IAAIQ,gBAAgB,EAAE;MAClB,MAAMI,oBAAoB,GAAGF,KAAK,CAACG,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACR,MAAM,KAAKA,MAAM,CAAC;MAC3EE,gBAAgB,CAACI,oBAAoB,CAAC;IAC1C;EACJ,CAAC,EAAE,CAACF,KAAK,EAAEJ,MAAM,EAAEE,gBAAgB,CAAC,CAAC;EAErC,MAAMO,cAAc,GAAGL,KAAK,CAACG,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACR,MAAM,KAAKA,MAAM,CAAC;EACrEU,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE;IAAEX,MAAM;IAAES;EAAe,CAAC,CAAC;EAE3D,MAAMG,cAAc,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMC,UAAU,GAAIF,KAAK,IAAK;IAC1BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAME,MAAM,GAAGH,KAAK,CAACI,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IACnDR,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEK,MAAM,EAAE,YAAY,EAAEhB,MAAM,CAAC;IACzEK,gBAAgB,CAACW,MAAM,EAAEhB,MAAM,CAAC;EACpC,CAAC;EAED,oBACIF,OAAA;IACIqB,SAAS,EAAC,YAAY;IACtBC,UAAU,EAAER,cAAe;IAC3BS,MAAM,EAAEN,UAAW;IAAAO,QAAA,gBAEnBxB,OAAA;MAAIqB,SAAS,EAAC,aAAa;MAAAG,QAAA,EACtBtB,MAAM,KAAK,MAAM,GAAG,OAAO,GAAGA,MAAM,KAAK,aAAa,GAAG,aAAa,GAAG;IAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChF,CAAC,eACL5B,OAAA;MAAKqB,SAAS,EAAC,eAAe;MAAAG,QAAA,EACzBb,cAAc,CAACkB,GAAG,CAAEnB,IAAI,iBACrBV,OAAA,CAACH,QAAQ;QAAA,GAEDa;MAAI,GADHA,IAAI,CAACQ,MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEnB,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACvB,EAAA,CA3CQJ,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AA6CjB,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}