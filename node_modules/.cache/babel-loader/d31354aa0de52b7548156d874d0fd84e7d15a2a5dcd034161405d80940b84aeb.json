{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GRIGS\\\\Desktop\\\\React_project\\\\ReactAppTasks\\\\project\\\\src\\\\Components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport '../App.scss';\nimport TaskCard from './TaskCard';\nimport { TaskContext } from '../Context/TaskContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList({\n  status\n}) {\n  _s();\n  const {\n    tasks,\n    addTask\n  } = useContext(TaskContext);\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    const taskName = e.dataTransfer.getData('taskName');\n    const taskToUpdate = tasks.find(task => task.taskName === taskName);\n    if (taskToUpdate) {\n      const updatedTask = {\n        ...taskToUpdate,\n        status\n      };\n      addTask(updatedTask);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task__list\",\n    onDragOver: handleDragOver,\n    onDrop: handleDrop,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"list__title\",\n      children: status === 'open' ? 'To Do' : status === 'in-progress' ? 'In Progress' : 'Done'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list__content\",\n      children: tasks.filter(task => task.status === status).map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n        ...task\n      }, task.taskName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskList, \"E841FhsQzA8z1Jh3Y8QTEECyE+Q=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["useContext","TaskCard","TaskContext","jsxDEV","_jsxDEV","TaskList","status","_s","tasks","addTask","handleDragOver","e","preventDefault","handleDrop","taskName","dataTransfer","getData","taskToUpdate","find","task","updatedTask","className","onDragOver","onDrop","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","map","_c","$RefreshReg$"],"sources":["C:/Users/GRIGS/Desktop/React_project/ReactAppTasks/project/src/Components/TaskList.js"],"sourcesContent":["import { useContext } from 'react';\r\nimport '../App.scss';\r\nimport TaskCard from './TaskCard';\r\nimport { TaskContext } from '../Context/TaskContext';\r\n\r\nfunction TaskList({ status }) {\r\n    const { tasks, addTask } = useContext(TaskContext);\r\n\r\n    const handleDragOver = (e) => {\r\n        e.preventDefault(); \r\n    };\r\n\r\n    const handleDrop = (e) => {\r\n        e.preventDefault();\r\n        const taskName = e.dataTransfer.getData('taskName');\r\n\r\n        const taskToUpdate = tasks.find((task) => task.taskName === taskName);\r\n        if (taskToUpdate) {\r\n            const updatedTask = { ...taskToUpdate, status };\r\n            addTask(updatedTask); \r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"task__list\"\r\n            onDragOver={handleDragOver} \r\n            onDrop={handleDrop}\r\n        >\r\n            <h2 className=\"list__title\">{status === 'open' ? 'To Do' : status === 'in-progress' ? 'In Progress' : 'Done'}</h2>\r\n            <div className=\"list__content\">\r\n                {tasks\r\n                    .filter((task) => task.status === status) \r\n                    .map((task) => (\r\n                        <TaskCard key={task.taskName} {...task} />\r\n                    ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskList;\r\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAO,aAAa;AACpB,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,QAAQA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC1B,MAAM;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGT,UAAU,CAACE,WAAW,CAAC;EAElD,MAAMQ,cAAc,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;EACtB,CAAC;EAED,MAAMC,UAAU,GAAIF,CAAC,IAAK;IACtBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAME,QAAQ,GAAGH,CAAC,CAACI,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAEnD,MAAMC,YAAY,GAAGT,KAAK,CAACU,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACL,QAAQ,KAAKA,QAAQ,CAAC;IACrE,IAAIG,YAAY,EAAE;MACd,MAAMG,WAAW,GAAG;QAAE,GAAGH,YAAY;QAAEX;MAAO,CAAC;MAC/CG,OAAO,CAACW,WAAW,CAAC;IACxB;EACJ,CAAC;EAED,oBACIhB,OAAA;IACIiB,SAAS,EAAC,YAAY;IACtBC,UAAU,EAAEZ,cAAe;IAC3Ba,MAAM,EAAEV,UAAW;IAAAW,QAAA,gBAEnBpB,OAAA;MAAIiB,SAAS,EAAC,aAAa;MAAAG,QAAA,EAAElB,MAAM,KAAK,MAAM,GAAG,OAAO,GAAGA,MAAM,KAAK,aAAa,GAAG,aAAa,GAAG;IAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClHxB,OAAA;MAAKiB,SAAS,EAAC,eAAe;MAAAG,QAAA,EACzBhB,KAAK,CACDqB,MAAM,CAAEV,IAAI,IAAKA,IAAI,CAACb,MAAM,KAAKA,MAAM,CAAC,CACxCwB,GAAG,CAAEX,IAAI,iBACNf,OAAA,CAACH,QAAQ;QAAA,GAAyBkB;MAAI,GAAvBA,IAAI,CAACL,QAAQ;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAC5C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACrB,EAAA,CAlCQF,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAoCjB,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}