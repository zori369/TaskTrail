{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GRIGS\\\\Desktop\\\\TaskTrail\\\\TaskTrail---REACT\\\\src\\\\Components\\\\TaskList.js\",\n  _s = $RefreshSig$();\n// Updated TaskList.js to handle dynamic updates to filteredTasks\nimport { useContext, useEffect, useState } from 'react';\nimport '../App.scss';\nimport TaskCard from './TaskCard.js';\nimport { TaskContext } from '../Context/TaskContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList({\n  status,\n  filteredTasks,\n  setFilteredTasks\n}) {\n  _s();\n  const {\n    tasks\n  } = useContext(TaskContext);\n  const [localFilteredTasks, setLocalFilteredTasks] = useState(filteredTasks);\n\n  // Sync localFilteredTasks with global tasks if filteredTasks is active\n  useEffect(() => {\n    if (filteredTasks) {\n      setLocalFilteredTasks(filteredTasks);\n    } else {\n      setLocalFilteredTasks(tasks.filter(task => task.status === status));\n    }\n  }, [tasks, filteredTasks, status]);\n  const displayedTasks = localFilteredTasks || tasks.filter(task => task.status === status);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task__list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"list__title\",\n      children: status === 'open' ? 'To Do' : status === 'in-progress' ? 'In Progress' : 'Done'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list__content\",\n      children: displayedTasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n        ...task\n      }, task.taskId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskList, \"C4rP4XeY6juKYRAowqhPrGnrK4w=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["useContext","useEffect","useState","TaskCard","TaskContext","jsxDEV","_jsxDEV","TaskList","status","filteredTasks","setFilteredTasks","_s","tasks","localFilteredTasks","setLocalFilteredTasks","filter","task","displayedTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","taskId","_c","$RefreshReg$"],"sources":["C:/Users/GRIGS/Desktop/TaskTrail/TaskTrail---REACT/src/Components/TaskList.js"],"sourcesContent":["// Updated TaskList.js to handle dynamic updates to filteredTasks\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport '../App.scss';\r\nimport TaskCard from './TaskCard.js';\r\nimport { TaskContext } from '../Context/TaskContext';\r\n\r\nfunction TaskList({ status, filteredTasks, setFilteredTasks }) {\r\n    const { tasks } = useContext(TaskContext);\r\n    const [localFilteredTasks, setLocalFilteredTasks] = useState(filteredTasks);\r\n\r\n    // Sync localFilteredTasks with global tasks if filteredTasks is active\r\n    useEffect(() => {\r\n        if (filteredTasks) {\r\n            setLocalFilteredTasks(filteredTasks);\r\n        } else {\r\n            setLocalFilteredTasks(tasks.filter((task) => task.status === status));\r\n        }\r\n    }, [tasks, filteredTasks, status]);\r\n\r\n    const displayedTasks = localFilteredTasks || tasks.filter((task) => task.status === status);\r\n\r\n    return (\r\n        <div className=\"task__list\">\r\n            <h2 className=\"list__title\">\r\n                {status === 'open' ? 'To Do' : status === 'in-progress' ? 'In Progress' : 'Done'}\r\n            </h2>\r\n            <div className=\"list__content\">\r\n                {displayedTasks.map((task) => (\r\n                    <TaskCard key={task.taskId} {...task} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskList;\r\n"],"mappings":";;AAAA;AACA,SAASA,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvD,OAAO,aAAa;AACpB,OAAOC,QAAQ,MAAM,eAAe;AACpC,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,QAAQA,CAAC;EAAEC,MAAM;EAAEC,aAAa;EAAEC;AAAiB,CAAC,EAAE;EAAAC,EAAA;EAC3D,MAAM;IAAEC;EAAM,CAAC,GAAGZ,UAAU,CAACI,WAAW,CAAC;EACzC,MAAM,CAACS,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGZ,QAAQ,CAACO,aAAa,CAAC;;EAE3E;EACAR,SAAS,CAAC,MAAM;IACZ,IAAIQ,aAAa,EAAE;MACfK,qBAAqB,CAACL,aAAa,CAAC;IACxC,CAAC,MAAM;MACHK,qBAAqB,CAACF,KAAK,CAACG,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACR,MAAM,KAAKA,MAAM,CAAC,CAAC;IACzE;EACJ,CAAC,EAAE,CAACI,KAAK,EAAEH,aAAa,EAAED,MAAM,CAAC,CAAC;EAElC,MAAMS,cAAc,GAAGJ,kBAAkB,IAAID,KAAK,CAACG,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACR,MAAM,KAAKA,MAAM,CAAC;EAE3F,oBACIF,OAAA;IAAKY,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvBb,OAAA;MAAIY,SAAS,EAAC,aAAa;MAAAC,QAAA,EACtBX,MAAM,KAAK,MAAM,GAAG,OAAO,GAAGA,MAAM,KAAK,aAAa,GAAG,aAAa,GAAG;IAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChF,CAAC,eACLjB,OAAA;MAAKY,SAAS,EAAC,eAAe;MAAAC,QAAA,EACzBF,cAAc,CAACO,GAAG,CAAER,IAAI,iBACrBV,OAAA,CAACH,QAAQ;QAAA,GAAuBa;MAAI,GAArBA,IAAI,CAACS,MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAC1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACZ,EAAA,CA3BQJ,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AA6BjB,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}