{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GRIGS\\\\Desktop\\\\React_project\\\\ReactAppTasks\\\\project\\\\src\\\\Context\\\\TaskContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskContext = /*#__PURE__*/createContext();\nexport const TaskProvider = ({\n  children\n}) => {\n  _s();\n  const [taskData, setTaskData] = useState({\n    taskName: '',\n    priority: '',\n    deadline: '',\n    description: ''\n  });\n  const updateTaskData = newData => {\n    setTaskData(prevData => ({\n      ...prevData,\n      ...newData\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      taskData,\n      updateTaskData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskProvider, \"0q5TX59tbelBISMV2UNJbbHGhew=\");\n_c = TaskProvider;\nexport default TaskContext;\nvar _c;\n$RefreshReg$(_c, \"TaskProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","TaskContext","TaskProvider","children","_s","taskData","setTaskData","taskName","priority","deadline","description","updateTaskData","newData","prevData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/GRIGS/Desktop/React_project/ReactAppTasks/project/src/Context/TaskContext.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nconst TaskContext = createContext();\r\n\r\nexport const TaskProvider = ({ children }) => {\r\n    const [taskData, setTaskData] = useState({\r\n        taskName: '',\r\n        priority: '',\r\n        deadline: '',\r\n        description: '',\r\n    });\r\n\r\n    const updateTaskData = (newData) => {\r\n        setTaskData((prevData) => ({\r\n            ...prevData,\r\n            ...newData,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <TaskContext.Provider value={{ taskData, updateTaskData }}>\r\n            {children}\r\n        </TaskContext.Provider>\r\n    );\r\n};\r\n\r\nexport default TaskContext;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACrCS,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE;EACjB,CAAC,CAAC;EAEF,MAAMC,cAAc,GAAIC,OAAO,IAAK;IAChCN,WAAW,CAAEO,QAAQ,KAAM;MACvB,GAAGA,QAAQ;MACX,GAAGD;IACP,CAAC,CAAC,CAAC;EACP,CAAC;EAED,oBACIZ,OAAA,CAACC,WAAW,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEV,QAAQ;MAAEM;IAAe,CAAE;IAAAR,QAAA,EACrDA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACf,EAAA,CApBWF,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AAsBzB,eAAeD,WAAW;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}