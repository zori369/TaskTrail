{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GRIGS\\\\Desktop\\\\TaskTrail\\\\TaskTrail---REACT\\\\src\\\\Components\\\\FilterTasks.tsx\",\n  _s = $RefreshSig$();\nimport '../App.scss';\nimport { useState, useContext, useEffect } from 'react';\nimport { TaskContext } from '../Context/TaskContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilterTasks = ({\n  setFilteredTasks\n}) => {\n  _s();\n  const {\n    tasks\n  } = useContext(TaskContext);\n  const [dropdownVisible, setDropdownVisible] = useState(false);\n  const [selectedFilter, setSelectedFilter] = useState('No filter selected');\n  const toggleDropdown = () => {\n    setDropdownVisible(prev => !prev);\n  };\n  const clearFilter = () => {\n    setSelectedFilter('No filter selected');\n    setFilteredTasks(tasks.filter(task => task.status === 'open'));\n    setDropdownVisible(false);\n  };\n  const handleFilter = filter => {\n    setSelectedFilter(filter);\n    setDropdownVisible(false);\n    const now = new Date();\n    const getStartOfWeek = date => {\n      const start = new Date(date);\n      const day = start.getDay() || 7; // Sunday should count as 7\n      start.setHours(0, 0, 0, 0);\n      start.setDate(start.getDate() - day + 1); // Adjust to the start of the week (Monday)\n      return start;\n    };\n    const getStartOfMonth = date => {\n      const start = new Date(date);\n      start.setHours(0, 0, 0, 0);\n      start.setDate(1); // Set to the first day of the month\n      return start;\n    };\n    const openTasks = tasks.filter(task => task.status === 'open');\n    const filtered = openTasks.filter(task => {\n      if (filter === 'Priority Low') return task.priority === 'low';\n      if (filter === 'Priority Medium') return task.priority === 'mid';\n      if (filter === 'Priority High') return task.priority === 'high';\n      if (filter === 'Deadline today') {\n        const deadline = new Date(task.deadline);\n        return deadline.toDateString() === now.toDateString();\n      }\n      if (filter === 'Deadline this week') {\n        const deadline = new Date(task.deadline);\n        return deadline >= getStartOfWeek(now) && deadline <= new Date(getStartOfWeek(now).getTime() + 6 * 24 * 60 * 60 * 1000) // Add 6 days to the start of the week\n        ;\n      }\n      if (filter === 'Deadline this month') {\n        const deadline = new Date(task.deadline);\n        return deadline >= getStartOfMonth(now) && deadline.getMonth() === now.getMonth();\n      }\n      return true;\n    });\n    setFilteredTasks(filtered);\n  };\n\n  // Sync filteredTasks with global tasks whenever tasks change\n  useEffect(() => {\n    if (selectedFilter === 'No filter selected') {\n      setFilteredTasks(tasks.filter(task => task.status === 'open'));\n    } else {\n      handleFilter(selectedFilter);\n    }\n  }, [tasks]); // Re-run effect whenever `tasks` changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter__sort\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"sort__title\",\n      children: \"Filter tasks by:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort__dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"dropdown__selected\",\n        children: selectedFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: `dropdown__arrow ${dropdownVisible ? 'rotated' : ''}`,\n        alt: \"arrow\",\n        src: \"/Images/arrow-up.svg\",\n        onClick: toggleDropdown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), dropdownVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown__options\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"option\",\n          onClick: clearFilter,\n          children: \"Clear Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"option\",\n          onClick: () => handleFilter('Priority Low'),\n          children: \"Priority Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"option\",\n          onClick: () => handleFilter('Priority Medium'),\n          children: \"Priority Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"option\",\n          onClick: () => handleFilter('Priority High'),\n          children: \"Priority High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"option\",\n          onClick: () => handleFilter('Deadline today'),\n          children: \"Deadline today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"option\",\n          onClick: () => handleFilter('Deadline this week'),\n          children: \"Deadline this week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"option\",\n          onClick: () => handleFilter('Deadline this month'),\n          children: \"Deadline this month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(FilterTasks, \"i5gdcchXozCprkSbc0Jsbqe3TpY=\");\n_c = FilterTasks;\nexport default FilterTasks;\nvar _c;\n$RefreshReg$(_c, \"FilterTasks\");","map":{"version":3,"names":["useState","useContext","useEffect","TaskContext","jsxDEV","_jsxDEV","FilterTasks","setFilteredTasks","_s","tasks","dropdownVisible","setDropdownVisible","selectedFilter","setSelectedFilter","toggleDropdown","prev","clearFilter","filter","task","status","handleFilter","now","Date","getStartOfWeek","date","start","day","getDay","setHours","setDate","getDate","getStartOfMonth","openTasks","filtered","priority","deadline","toDateString","getTime","getMonth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","alt","src","onClick","_c","$RefreshReg$"],"sources":["C:/Users/GRIGS/Desktop/TaskTrail/TaskTrail---REACT/src/Components/FilterTasks.tsx"],"sourcesContent":["import '../App.scss';\r\nimport { useState, useContext, useEffect } from 'react';\r\nimport { TaskContext, TaskContextType, Task } from '../Context/TaskContext';\r\n\r\ninterface FilterTasksProps {\r\n    setFilteredTasks: (tasks: Task[]) => void; // Function to set the filtered tasks\r\n}\r\n\r\nconst FilterTasks: React.FC<FilterTasksProps> = ({ setFilteredTasks }) => {\r\n    const { tasks } = useContext(TaskContext) as TaskContextType;\r\n    const [dropdownVisible, setDropdownVisible] = useState<boolean>(false);\r\n    const [selectedFilter, setSelectedFilter] = useState<string>('No filter selected');\r\n\r\n    const toggleDropdown = () => {\r\n        setDropdownVisible((prev) => !prev);\r\n    };\r\n\r\n    const clearFilter = () => {\r\n        setSelectedFilter('No filter selected');\r\n        setFilteredTasks(tasks.filter((task) => task.status === 'open'));\r\n        setDropdownVisible(false);\r\n    };\r\n\r\n    const handleFilter = (filter: string) => {\r\n        setSelectedFilter(filter);\r\n        setDropdownVisible(false);\r\n\r\n        const now = new Date();\r\n        const getStartOfWeek = (date: Date) => {\r\n            const start = new Date(date);\r\n            const day = start.getDay() || 7; // Sunday should count as 7\r\n            start.setHours(0, 0, 0, 0);\r\n            start.setDate(start.getDate() - day + 1); // Adjust to the start of the week (Monday)\r\n            return start;\r\n        };\r\n\r\n        const getStartOfMonth = (date: Date) => {\r\n            const start = new Date(date);\r\n            start.setHours(0, 0, 0, 0);\r\n            start.setDate(1); // Set to the first day of the month\r\n            return start;\r\n        };\r\n\r\n        const openTasks = tasks.filter((task) => task.status === 'open');\r\n\r\n        const filtered = openTasks.filter((task) => {\r\n            if (filter === 'Priority Low') return task.priority === 'low';\r\n            if (filter === 'Priority Medium') return task.priority === 'mid';\r\n            if (filter === 'Priority High') return task.priority === 'high';\r\n\r\n            if (filter === 'Deadline today') {\r\n                const deadline = new Date(task.deadline);\r\n                return deadline.toDateString() === now.toDateString();\r\n            }\r\n\r\n            if (filter === 'Deadline this week') {\r\n                const deadline = new Date(task.deadline);\r\n                return (\r\n                    deadline >= getStartOfWeek(now) &&\r\n                    deadline <= new Date(getStartOfWeek(now).getTime() + 6 * 24 * 60 * 60 * 1000) // Add 6 days to the start of the week\r\n                );\r\n            }\r\n\r\n            if (filter === 'Deadline this month') {\r\n                const deadline = new Date(task.deadline);\r\n                return (\r\n                    deadline >= getStartOfMonth(now) &&\r\n                    deadline.getMonth() === now.getMonth()\r\n                );\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        setFilteredTasks(filtered);\r\n    };\r\n\r\n    // Sync filteredTasks with global tasks whenever tasks change\r\n    useEffect(() => {\r\n        if (selectedFilter === 'No filter selected') {\r\n            setFilteredTasks(tasks.filter((task) => task.status === 'open'));\r\n        } else {\r\n            handleFilter(selectedFilter);\r\n        }\r\n    }, [tasks]); // Re-run effect whenever `tasks` changes\r\n\r\n    return (\r\n        <div className=\"filter__sort\">\r\n            <h3 className=\"sort__title\">Filter tasks by:</h3>\r\n            <div className=\"sort__dropdown\">\r\n                <p className=\"dropdown__selected\">{selectedFilter}</p>\r\n                <img\r\n                    className={`dropdown__arrow ${dropdownVisible ? 'rotated' : ''}`}\r\n                    alt=\"arrow\"\r\n                    src=\"/Images/arrow-up.svg\"\r\n                    onClick={toggleDropdown}\r\n                />\r\n                {dropdownVisible && (\r\n                    <div className=\"dropdown__options\">\r\n                        <p className=\"option\" onClick={clearFilter}>\r\n                            Clear Filter\r\n                        </p>\r\n                        <p\r\n                            className=\"option\"\r\n                            onClick={() => handleFilter('Priority Low')}\r\n                        >\r\n                            Priority Low\r\n                        </p>\r\n                        <p\r\n                            className=\"option\"\r\n                            onClick={() => handleFilter('Priority Medium')}\r\n                        >\r\n                            Priority Medium\r\n                        </p>\r\n                        <p\r\n                            className=\"option\"\r\n                            onClick={() => handleFilter('Priority High')}\r\n                        >\r\n                            Priority High\r\n                        </p>\r\n                        <p\r\n                            className=\"option\"\r\n                            onClick={() => handleFilter('Deadline today')}\r\n                        >\r\n                            Deadline today\r\n                        </p>\r\n                        <p\r\n                            className=\"option\"\r\n                            onClick={() => handleFilter('Deadline this week')}\r\n                        >\r\n                            Deadline this week\r\n                        </p>\r\n                        <p\r\n                            className=\"option\"\r\n                            onClick={() => handleFilter('Deadline this month')}\r\n                        >\r\n                            Deadline this month\r\n                        </p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FilterTasks;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}