{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GRIGS\\\\Desktop\\\\TaskTrail\\\\TaskTrail---REACT\\\\src\\\\Components\\\\SortTasks.tsx\",\n  _s = $RefreshSig$();\nimport '../App.scss';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SortTasks = ({\n  tasks,\n  setSortedTasks\n}) => {\n  _s();\n  const [dropdownVisible, setDropdownVisible] = useState(false);\n  const [selectedSortOption, setSelectedSortOption] = useState('Choose sorting option');\n  const toggleDropdown = () => {\n    setDropdownVisible(prev => !prev);\n  };\n  const handleSort = sortOption => {\n    const sortedTasks = [...tasks];\n    switch (sortOption) {\n      case 'Priority (High to Low)':\n        sortedTasks.sort((a, b) => b.priority > a.priority ? 1 : -1);\n        break;\n      case 'Priority (Low to High)':\n        sortedTasks.sort((a, b) => a.priority > b.priority ? 1 : -1);\n        break;\n      case 'Recently added':\n        sortedTasks.sort((a, b) => b.taskId - a.taskId);\n        break;\n      case 'Oldest added':\n        sortedTasks.sort((a, b) => a.taskId - b.taskId);\n        break;\n      case 'Deadline (Soonest first)':\n        sortedTasks.sort((a, b) => new Date(a.deadline).getTime() - new Date(b.deadline).getTime());\n        break;\n      case 'Deadline (Latest first)':\n        sortedTasks.sort((a, b) => new Date(b.deadline).getTime() - new Date(a.deadline).getTime());\n        break;\n      case 'Name (A - Z)':\n        sortedTasks.sort((a, b) => a.taskName.localeCompare(b.taskName));\n        break;\n      case 'Name (Z - A)':\n        sortedTasks.sort((a, b) => b.taskName.localeCompare(a.taskName));\n        break;\n      default:\n        break;\n    }\n    setSelectedSortOption(sortOption);\n    setSortedTasks(sortedTasks);\n    setDropdownVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks__sort\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"sort__title\",\n      children: \"Sort tasks by:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort__dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown__selected\",\n        onClick: toggleDropdown,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedSortOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: `dropdown__arrow ${dropdownVisible ? 'rotated' : ''}`,\n          alt: \"arrow\",\n          src: \"/Images/arrow-up.svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), dropdownVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown__options\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"option\",\n          onClick: () => handleSort('Priority (High to Low)'),\n          children: \"Priority (High to Low)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"option\",\n          onClick: () => handleSort('Priority (Low to High)'),\n          children: \"Priority (Low to High)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"option\",\n          onClick: () => handleSort('Recently added'),\n          children: \"Recently added\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"option\",\n          onClick: () => handleSort('Oldest added'),\n          children: \"Oldest added\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"option\",\n          onClick: () => handleSort('Deadline (Soonest first)'),\n          children: \"Deadline (Soonest first)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"option\",\n          onClick: () => handleSort('Deadline (Latest first)'),\n          children: \"Deadline (Latest first)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"option\",\n          onClick: () => handleSort('Name (A - Z)'),\n          children: \"Name (A - Z)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"option\",\n          onClick: () => handleSort('Name (Z - A)'),\n          children: \"Name (Z - A)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(SortTasks, \"S/HGAiIZaYINAhJtMQTSNVDgPRk=\");\n_c = SortTasks;\nexport default SortTasks;\nvar _c;\n$RefreshReg$(_c, \"SortTasks\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","SortTasks","tasks","setSortedTasks","_s","dropdownVisible","setDropdownVisible","selectedSortOption","setSelectedSortOption","toggleDropdown","prev","handleSort","sortOption","sortedTasks","sort","a","b","priority","taskId","Date","deadline","getTime","taskName","localeCompare","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","alt","src","_c","$RefreshReg$"],"sources":["C:/Users/GRIGS/Desktop/TaskTrail/TaskTrail---REACT/src/Components/SortTasks.tsx"],"sourcesContent":["import '../App.scss';\r\nimport { useState } from 'react';\r\nimport { Task } from '../Context/TaskContext';\r\n\r\ninterface SortTasksProps {\r\n    tasks: Task[]; // Array of tasks to sort\r\n    setSortedTasks: (tasks: Task[]) => void; // Function to update sorted tasks\r\n}\r\n\r\nconst SortTasks: React.FC<SortTasksProps> = ({ tasks, setSortedTasks }) => {\r\n    const [dropdownVisible, setDropdownVisible] = useState<boolean>(false);\r\n    const [selectedSortOption, setSelectedSortOption] = useState<string>('Choose sorting option');\r\n\r\n    const toggleDropdown = () => {\r\n        setDropdownVisible((prev) => !prev);\r\n    };\r\n\r\n    const handleSort = (sortOption: string) => {\r\n        const sortedTasks = [...tasks];\r\n\r\n        switch (sortOption) {\r\n            case 'Priority (High to Low)':\r\n                sortedTasks.sort((a, b) => (b.priority > a.priority ? 1 : -1));\r\n                break;\r\n\r\n            case 'Priority (Low to High)':\r\n                sortedTasks.sort((a, b) => (a.priority > b.priority ? 1 : -1));\r\n                break;\r\n\r\n            case 'Recently added':\r\n                sortedTasks.sort((a, b) => b.taskId - a.taskId);\r\n                break;\r\n\r\n            case 'Oldest added':\r\n                sortedTasks.sort((a, b) => a.taskId - b.taskId);\r\n                break;\r\n\r\n            case 'Deadline (Soonest first)':\r\n                sortedTasks.sort((a, b) =>\r\n                    new Date(a.deadline).getTime() - new Date(b.deadline).getTime()\r\n                );\r\n                break;\r\n\r\n            case 'Deadline (Latest first)':\r\n                sortedTasks.sort((a, b) =>\r\n                    new Date(b.deadline).getTime() - new Date(a.deadline).getTime()\r\n                );\r\n                break;\r\n\r\n            case 'Name (A - Z)':\r\n                sortedTasks.sort((a, b) => a.taskName.localeCompare(b.taskName));\r\n                break;\r\n\r\n            case 'Name (Z - A)':\r\n                sortedTasks.sort((a, b) => b.taskName.localeCompare(a.taskName));\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        setSelectedSortOption(sortOption);\r\n        setSortedTasks(sortedTasks);\r\n        setDropdownVisible(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"tasks__sort\">\r\n            <h3 className=\"sort__title\">Sort tasks by:</h3>\r\n            <div className=\"sort__dropdown\">\r\n                <div\r\n                    className=\"dropdown__selected\"\r\n                    onClick={toggleDropdown}\r\n                >\r\n                    <p>{selectedSortOption}</p>\r\n                    <img\r\n                        className={`dropdown__arrow ${dropdownVisible ? 'rotated' : ''}`}\r\n                        alt=\"arrow\"\r\n                        src=\"/Images/arrow-up.svg\"\r\n                    />\r\n                </div>\r\n                {dropdownVisible && (\r\n                    <div className=\"dropdown__options\">\r\n                        <p\r\n                            className=\"option\"\r\n                            onClick={() => handleSort('Priority (High to Low)')}\r\n                        >\r\n                            Priority (High to Low)\r\n                        </p>\r\n                        <p\r\n                            className=\"option\"\r\n                            onClick={() => handleSort('Priority (Low to High)')}\r\n                        >\r\n                            Priority (Low to High)\r\n                        </p>\r\n                        <p\r\n                            className=\"option\"\r\n                            onClick={() => handleSort('Recently added')}\r\n                        >\r\n                            Recently added\r\n                        </p>\r\n                        <p\r\n                            className=\"option\"\r\n                            onClick={() => handleSort('Oldest added')}\r\n                        >\r\n                            Oldest added\r\n                        </p>\r\n                        <p\r\n                            className=\"option\"\r\n                            onClick={() => handleSort('Deadline (Soonest first)')}\r\n                        >\r\n                            Deadline (Soonest first)\r\n                        </p>\r\n                        <p\r\n                            className=\"option\"\r\n                            onClick={() => handleSort('Deadline (Latest first)')}\r\n                        >\r\n                            Deadline (Latest first)\r\n                        </p>\r\n                        <p\r\n                            className=\"option\"\r\n                            onClick={() => handleSort('Name (A - Z)')}\r\n                        >\r\n                            Name (A - Z)\r\n                        </p>\r\n                        <p\r\n                            className=\"option\"\r\n                            onClick={() => handleSort('Name (Z - A)')}\r\n                        >\r\n                            Name (Z - A)\r\n                        </p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SortTasks;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}