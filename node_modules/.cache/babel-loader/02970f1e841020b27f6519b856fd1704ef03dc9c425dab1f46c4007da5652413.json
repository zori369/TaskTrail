{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GRIGS\\\\Desktop\\\\React_project\\\\ReactAppTasks\\\\project\\\\src\\\\Components\\\\FilterTasks.js\",\n  _s = $RefreshSig$();\nimport '../App.scss';\nimport { useState, useContext } from 'react';\nimport { TaskContext } from '../Context/TaskContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FilterTasks() {\n  _s();\n  const {\n    tasks\n  } = useContext(TaskContext); // Access tasks from context\n  const [filteredTasks, setFilteredTasks] = useState([]); // Store filtered tasks\n  const [activeFilter, setActiveFilter] = useState(null); // Track the active filter\n\n  const handleFilter = filter => {\n    setActiveFilter(filter);\n    const now = new Date();\n    const getStartOfWeek = date => {\n      const start = new Date(date);\n      const day = start.getDay() || 7; // Adjust for Sunday as 0\n      start.setHours(0, 0, 0, 0);\n      start.setDate(start.getDate() - day + 1); // Start of the week is Monday\n      return start;\n    };\n    const getStartOfMonth = date => {\n      const start = new Date(date);\n      start.setHours(0, 0, 0, 0);\n      start.setDate(1);\n      return start;\n    };\n    const openTasks = tasks.filter(task => task.status === 'open'); // Filter by status\n\n    const filtered = openTasks.filter(task => {\n      if (filter === 'Priority Low') return task.priority === 'low';\n      if (filter === 'Priority Medium') return task.priority === 'mid';\n      if (filter === 'Priority High') return task.priority === 'high';\n      if (filter === 'Deadline today') {\n        const deadline = new Date(task.deadline);\n        return deadline.toDateString() === now.toDateString() // Compare date parts\n        ;\n      }\n      if (filter === 'Deadline this week') {\n        const deadline = new Date(task.deadline);\n        return deadline >= getStartOfWeek(now) && deadline <= new Date(getStartOfWeek(now).getTime() + 6 * 24 * 60 * 60 * 1000) // End of the week\n        ;\n      }\n      if (filter === 'Deadline this month') {\n        const deadline = new Date(task.deadline);\n        return deadline >= getStartOfMonth(now) && deadline.getMonth() === now.getMonth();\n      }\n      return true; // If no filter is active, show all tasks\n    });\n    setFilteredTasks(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter__sort\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"sort__title\",\n      children: \"Filter tasks by:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort__dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown__options\",\n        children: ['Priority Low', 'Priority Medium', 'Priority High', 'Deadline today', 'Deadline this week', 'Deadline this month'].map(filter => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `option ${activeFilter === filter ? 'active' : ''}`,\n          onClick: () => handleFilter(filter),\n          children: filter\n        }, filter, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"dropdown__arrow\",\n        alt: \"arrow\",\n        src: \"/Images/arrow-up.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(FilterTasks, \"6/RBTt8uZRRojNcv4bUYLMojCGI=\");\n_c = FilterTasks;\nexport default FilterTasks;\nvar _c;\n$RefreshReg$(_c, \"FilterTasks\");","map":{"version":3,"names":["useState","useContext","TaskContext","jsxDEV","_jsxDEV","FilterTasks","_s","tasks","filteredTasks","setFilteredTasks","activeFilter","setActiveFilter","handleFilter","filter","now","Date","getStartOfWeek","date","start","day","getDay","setHours","setDate","getDate","getStartOfMonth","openTasks","task","status","filtered","priority","deadline","toDateString","getTime","getMonth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","alt","src","_c","$RefreshReg$"],"sources":["C:/Users/GRIGS/Desktop/React_project/ReactAppTasks/project/src/Components/FilterTasks.js"],"sourcesContent":["import '../App.scss';\r\nimport { useState, useContext } from 'react';\r\nimport { TaskContext } from '../Context/TaskContext';\r\n\r\nfunction FilterTasks() {\r\n    const { tasks } = useContext(TaskContext); // Access tasks from context\r\n    const [filteredTasks, setFilteredTasks] = useState([]); // Store filtered tasks\r\n    const [activeFilter, setActiveFilter] = useState(null); // Track the active filter\r\n\r\n    const handleFilter = (filter) => {\r\n        setActiveFilter(filter);\r\n\r\n        const now = new Date();\r\n        const getStartOfWeek = (date) => {\r\n            const start = new Date(date);\r\n            const day = start.getDay() || 7; // Adjust for Sunday as 0\r\n            start.setHours(0, 0, 0, 0);\r\n            start.setDate(start.getDate() - day + 1); // Start of the week is Monday\r\n            return start;\r\n        };\r\n\r\n        const getStartOfMonth = (date) => {\r\n            const start = new Date(date);\r\n            start.setHours(0, 0, 0, 0);\r\n            start.setDate(1);\r\n            return start;\r\n        };\r\n\r\n        const openTasks = tasks.filter((task) => task.status === 'open'); // Filter by status\r\n\r\n        const filtered = openTasks.filter((task) => {\r\n            if (filter === 'Priority Low') return task.priority === 'low';\r\n            if (filter === 'Priority Medium') return task.priority === 'mid';\r\n            if (filter === 'Priority High') return task.priority === 'high';\r\n\r\n            if (filter === 'Deadline today') {\r\n                const deadline = new Date(task.deadline);\r\n                return (\r\n                    deadline.toDateString() === now.toDateString() // Compare date parts\r\n                );\r\n            }\r\n\r\n            if (filter === 'Deadline this week') {\r\n                const deadline = new Date(task.deadline);\r\n                return (\r\n                    deadline >= getStartOfWeek(now) &&\r\n                    deadline <= new Date(getStartOfWeek(now).getTime() + 6 * 24 * 60 * 60 * 1000) // End of the week\r\n                );\r\n            }\r\n\r\n            if (filter === 'Deadline this month') {\r\n                const deadline = new Date(task.deadline);\r\n                return (\r\n                    deadline >= getStartOfMonth(now) &&\r\n                    deadline.getMonth() === now.getMonth()\r\n                );\r\n            }\r\n\r\n            return true; // If no filter is active, show all tasks\r\n        });\r\n\r\n        setFilteredTasks(filtered);\r\n    };\r\n\r\n    return (\r\n        <div className=\"filter__sort\">\r\n            <h3 className=\"sort__title\">Filter tasks by:</h3>\r\n            <div className=\"sort__dropdown\">\r\n                <div className=\"dropdown__options\">\r\n                    {['Priority Low', 'Priority Medium', 'Priority High', 'Deadline today', 'Deadline this week', 'Deadline this month'].map((filter) => (\r\n                        <p\r\n                            key={filter}\r\n                            className={`option ${activeFilter === filter ? 'active' : ''}`}\r\n                            onClick={() => handleFilter(filter)}\r\n                        >\r\n                            {filter}\r\n                        </p>\r\n                    ))}\r\n                </div>\r\n                <img className=\"dropdown__arrow\" alt=\"arrow\" src=\"/Images/arrow-up.svg\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FilterTasks;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}