{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GRIGS\\\\Desktop\\\\React_project\\\\ReactAppTasks\\\\project\\\\src\\\\Components\\\\TaskCard.js\",\n  _s = $RefreshSig$();\nimport { useState, useContext } from 'react';\nimport '../App.scss';\nimport { TaskContext } from '../Context/TaskContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TaskCard({\n  taskId,\n  taskName,\n  priority,\n  deadline,\n  description,\n  dateAdded,\n  status\n}) {\n  _s();\n  const [showDetails, setShowDetails] = useState(false);\n  const {\n    deleteTask\n  } = useContext(TaskContext);\n  const toggleDetails = () => {\n    setShowDetails(prev => !prev);\n  };\n  const handleDelete = () => {\n    // Pass taskId for deletion\n    deleteTask(taskId);\n  };\n  const handleDragStart = e => {\n    e.dataTransfer.setData('taskId', taskId); // Using taskId for drag\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task__card\",\n    draggable: \"true\",\n    onDragStart: handleDragStart,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"card__title\",\n        children: taskName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"card__button\",\n        onClick: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Priority: \", priority]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Deadline: \", deadline]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), showDetails && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Created: \", dateAdded]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"details\",\n          children: [\"Description: \", description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button--generic\",\n        onClick: toggleDetails,\n        children: showDetails ? 'Hide Details' : 'View Details'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskCard, \"GUoLO4qRJGGlrcgojqJhfPk5X0E=\");\n_c = TaskCard;\nexport default TaskCard;\nvar _c;\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"names":["useState","useContext","TaskContext","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskCard","taskId","taskName","priority","deadline","description","dateAdded","status","_s","showDetails","setShowDetails","deleteTask","toggleDetails","prev","handleDelete","handleDragStart","e","dataTransfer","setData","className","draggable","onDragStart","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/GRIGS/Desktop/React_project/ReactAppTasks/project/src/Components/TaskCard.js"],"sourcesContent":["import { useState, useContext } from 'react';\r\nimport '../App.scss';\r\nimport { TaskContext } from '../Context/TaskContext';\r\n\r\nfunction TaskCard({ taskId, taskName, priority, deadline, description, dateAdded, status }) {\r\n    const [showDetails, setShowDetails] = useState(false);\r\n    const { deleteTask } = useContext(TaskContext);\r\n\r\n    const toggleDetails = () => {\r\n        setShowDetails((prev) => !prev);\r\n    };\r\n\r\n    const handleDelete = () => {\r\n        // Pass taskId for deletion\r\n        deleteTask(taskId);\r\n    };\r\n\r\n    const handleDragStart = (e) => {\r\n        e.dataTransfer.setData('taskId', taskId); // Using taskId for drag\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"task__card\"\r\n            draggable=\"true\"\r\n            onDragStart={handleDragStart}\r\n        >\r\n            <div className=\"card__header\">\r\n                <h2 className=\"card__title\">{taskName}</h2>\r\n                <button className=\"card__button\" onClick={handleDelete}></button>\r\n            </div>\r\n            <div className=\"card__content\">\r\n                <p>Priority: {priority}</p>\r\n                <p>Deadline: {deadline}</p>\r\n                {showDetails && (\r\n                    <>\r\n                        <p>Created: {dateAdded}</p>\r\n                        <p className=\"details\">Description: {description}</p>\r\n                    </>\r\n                )}\r\n                <button className=\"button--generic\" onClick={toggleDetails}>\r\n                    {showDetails ? 'Hide Details' : 'View Details'}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}