{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GRIGS\\\\Desktop\\\\React_project\\\\ReactAppTasks\\\\project\\\\src\\\\Components\\\\FilterTasks.js\",\n  _s = $RefreshSig$();\nimport '../App.scss';\nimport { useState, useContext } from 'react';\nimport { TaskContext } from '../Context/TaskContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FilterTasks({\n  setFilteredTasks\n}) {\n  _s();\n  const {\n    tasks\n  } = useContext(TaskContext); // Access tasks from context\n  const [dropdownVisible, setDropdownVisible] = useState(false); // Dropdown visibility\n\n  const toggleDropdown = () => {\n    setDropdownVisible(prev => !prev);\n  };\n  const handleFilter = filter => {\n    setDropdownVisible(false); // Close dropdown after selecting a filter\n\n    const now = new Date();\n    const getStartOfWeek = date => {\n      const start = new Date(date);\n      const day = start.getDay() || 7;\n      start.setHours(0, 0, 0, 0);\n      start.setDate(start.getDate() - day + 1);\n      return start;\n    };\n    const getStartOfMonth = date => {\n      const start = new Date(date);\n      start.setHours(0, 0, 0, 0);\n      start.setDate(1);\n      return start;\n    };\n    const openTasks = tasks.filter(task => task.status === 'open'); // Only filter \"open\" tasks\n\n    const filtered = openTasks.filter(task => {\n      if (filter === 'Priority Low') return task.priority === 'low';\n      if (filter === 'Priority Medium') return task.priority === 'mid';\n      if (filter === 'Priority High') return task.priority === 'high';\n      if (filter === 'Deadline today') {\n        const deadline = new Date(task.deadline);\n        return deadline.toDateString() === now.toDateString();\n      }\n      if (filter === 'Deadline this week') {\n        const deadline = new Date(task.deadline);\n        return deadline >= getStartOfWeek(now) && deadline <= new Date(getStartOfWeek(now).getTime() + 6 * 24 * 60 * 60 * 1000);\n      }\n      if (filter === 'Deadline this month') {\n        const deadline = new Date(task.deadline);\n        return deadline >= getStartOfMonth(now) && deadline.getMonth() === now.getMonth();\n      }\n      return true;\n    });\n    setFilteredTasks(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter__sort\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"sort__title\",\n      children: \"Filter tasks by:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort__dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: `dropdown__arrow ${dropdownVisible ? 'rotated' : ''}`,\n        alt: \"arrow\",\n        src: \"/Images/arrow-up.svg\",\n        onClick: toggleDropdown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), dropdownVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown__options hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"option\",\n          onClick: () => handleFilter('Priority Low'),\n          children: \"Priority Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"option\",\n          onClick: () => handleFilter('Priority Medium'),\n          children: \"Priority Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"option\",\n          onClick: () => handleFilter('Priority High'),\n          children: \"Priority High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"option\",\n          onClick: () => handleFilter('Deadline today'),\n          children: \"Deadline today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"option\",\n          onClick: () => handleFilter('Deadline this week'),\n          children: \"Deadline this week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"option\",\n          onClick: () => handleFilter('Deadline this month'),\n          children: \"Deadline this month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(FilterTasks, \"lrGQaFLGtJt5SK44FJRX3hph4HU=\");\n_c = FilterTasks;\nexport default FilterTasks;\nvar _c;\n$RefreshReg$(_c, \"FilterTasks\");","map":{"version":3,"names":["useState","useContext","TaskContext","jsxDEV","_jsxDEV","FilterTasks","setFilteredTasks","_s","tasks","dropdownVisible","setDropdownVisible","toggleDropdown","prev","handleFilter","filter","now","Date","getStartOfWeek","date","start","day","getDay","setHours","setDate","getDate","getStartOfMonth","openTasks","task","status","filtered","priority","deadline","toDateString","getTime","getMonth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","alt","src","onClick","_c","$RefreshReg$"],"sources":["C:/Users/GRIGS/Desktop/React_project/ReactAppTasks/project/src/Components/FilterTasks.js"],"sourcesContent":["import '../App.scss';\r\nimport { useState, useContext } from 'react';\r\nimport { TaskContext } from '../Context/TaskContext';\r\n\r\nfunction FilterTasks({ setFilteredTasks }) {\r\n    const { tasks } = useContext(TaskContext); // Access tasks from context\r\n    const [dropdownVisible, setDropdownVisible] = useState(false); // Dropdown visibility\r\n\r\n    const toggleDropdown = () => {\r\n        setDropdownVisible((prev) => !prev);\r\n    };\r\n\r\n    const handleFilter = (filter) => {\r\n        setDropdownVisible(false); // Close dropdown after selecting a filter\r\n\r\n        const now = new Date();\r\n        const getStartOfWeek = (date) => {\r\n            const start = new Date(date);\r\n            const day = start.getDay() || 7;\r\n            start.setHours(0, 0, 0, 0);\r\n            start.setDate(start.getDate() - day + 1);\r\n            return start;\r\n        };\r\n\r\n        const getStartOfMonth = (date) => {\r\n            const start = new Date(date);\r\n            start.setHours(0, 0, 0, 0);\r\n            start.setDate(1);\r\n            return start;\r\n        };\r\n\r\n        const openTasks = tasks.filter((task) => task.status === 'open'); // Only filter \"open\" tasks\r\n\r\n        const filtered = openTasks.filter((task) => {\r\n            if (filter === 'Priority Low') return task.priority === 'low';\r\n            if (filter === 'Priority Medium') return task.priority === 'mid';\r\n            if (filter === 'Priority High') return task.priority === 'high';\r\n\r\n            if (filter === 'Deadline today') {\r\n                const deadline = new Date(task.deadline);\r\n                return deadline.toDateString() === now.toDateString();\r\n            }\r\n\r\n            if (filter === 'Deadline this week') {\r\n                const deadline = new Date(task.deadline);\r\n                return (\r\n                    deadline >= getStartOfWeek(now) &&\r\n                    deadline <= new Date(getStartOfWeek(now).getTime() + 6 * 24 * 60 * 60 * 1000)\r\n                );\r\n            }\r\n\r\n            if (filter === 'Deadline this month') {\r\n                const deadline = new Date(task.deadline);\r\n                return (\r\n                    deadline >= getStartOfMonth(now) &&\r\n                    deadline.getMonth() === now.getMonth()\r\n                );\r\n            }\r\n\r\n            return true; \r\n        });\r\n\r\n        setFilteredTasks(filtered);\r\n    };\r\n\r\n    return (\r\n        <div className=\"filter__sort\">\r\n            <h3 className=\"sort__title\">Filter tasks by:</h3>\r\n            <div className=\"sort__dropdown\">\r\n                <img\r\n                    className={`dropdown__arrow ${dropdownVisible ? 'rotated' : ''\r\n                        }`}\r\n                    alt=\"arrow\"\r\n                    src=\"/Images/arrow-up.svg\"\r\n                    onClick={toggleDropdown}\r\n                />\r\n                {dropdownVisible && (\r\n                    <div className=\"dropdown__options hidden\">\r\n                        <p\r\n                            className=\"option\"\r\n                            onClick={() => handleFilter('Priority Low')}\r\n                        >\r\n                            Priority Low\r\n                        </p>\r\n                        <p\r\n                            className=\"option\"\r\n                            onClick={() => handleFilter('Priority Medium')}\r\n                        >\r\n                            Priority Medium\r\n                        </p>\r\n                        <p\r\n                            className=\"option\"\r\n                            onClick={() => handleFilter('Priority High')}\r\n                        >\r\n                            Priority High\r\n                        </p>\r\n                        <p\r\n                            className=\"option\"\r\n                            onClick={() => handleFilter('Deadline today')}\r\n                        >\r\n                            Deadline today\r\n                        </p>\r\n                        <p\r\n                            className=\"option\"\r\n                            onClick={() => handleFilter('Deadline this week')}\r\n                        >\r\n                            Deadline this week\r\n                        </p>\r\n                        <p\r\n                            className=\"option\"\r\n                            onClick={() => handleFilter('Deadline this month')}\r\n                        >\r\n                            Deadline this month\r\n                        </p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FilterTasks;\r\n"],"mappings":";;AAAA,OAAO,aAAa;AACpB,SAASA,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC5C,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,WAAWA,CAAC;EAAEC;AAAiB,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM;IAAEC;EAAM,CAAC,GAAGP,UAAU,CAACC,WAAW,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACO,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE/D,MAAMW,cAAc,GAAGA,CAAA,KAAM;IACzBD,kBAAkB,CAAEE,IAAI,IAAK,CAACA,IAAI,CAAC;EACvC,CAAC;EAED,MAAMC,YAAY,GAAIC,MAAM,IAAK;IAC7BJ,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;;IAE3B,MAAMK,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,MAAMC,cAAc,GAAIC,IAAI,IAAK;MAC7B,MAAMC,KAAK,GAAG,IAAIH,IAAI,CAACE,IAAI,CAAC;MAC5B,MAAME,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC,CAAC,IAAI,CAAC;MAC/BF,KAAK,CAACG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAC1BH,KAAK,CAACI,OAAO,CAACJ,KAAK,CAACK,OAAO,CAAC,CAAC,GAAGJ,GAAG,GAAG,CAAC,CAAC;MACxC,OAAOD,KAAK;IAChB,CAAC;IAED,MAAMM,eAAe,GAAIP,IAAI,IAAK;MAC9B,MAAMC,KAAK,GAAG,IAAIH,IAAI,CAACE,IAAI,CAAC;MAC5BC,KAAK,CAACG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAC1BH,KAAK,CAACI,OAAO,CAAC,CAAC,CAAC;MAChB,OAAOJ,KAAK;IAChB,CAAC;IAED,MAAMO,SAAS,GAAGlB,KAAK,CAACM,MAAM,CAAEa,IAAI,IAAKA,IAAI,CAACC,MAAM,KAAK,MAAM,CAAC,CAAC,CAAC;;IAElE,MAAMC,QAAQ,GAAGH,SAAS,CAACZ,MAAM,CAAEa,IAAI,IAAK;MACxC,IAAIb,MAAM,KAAK,cAAc,EAAE,OAAOa,IAAI,CAACG,QAAQ,KAAK,KAAK;MAC7D,IAAIhB,MAAM,KAAK,iBAAiB,EAAE,OAAOa,IAAI,CAACG,QAAQ,KAAK,KAAK;MAChE,IAAIhB,MAAM,KAAK,eAAe,EAAE,OAAOa,IAAI,CAACG,QAAQ,KAAK,MAAM;MAE/D,IAAIhB,MAAM,KAAK,gBAAgB,EAAE;QAC7B,MAAMiB,QAAQ,GAAG,IAAIf,IAAI,CAACW,IAAI,CAACI,QAAQ,CAAC;QACxC,OAAOA,QAAQ,CAACC,YAAY,CAAC,CAAC,KAAKjB,GAAG,CAACiB,YAAY,CAAC,CAAC;MACzD;MAEA,IAAIlB,MAAM,KAAK,oBAAoB,EAAE;QACjC,MAAMiB,QAAQ,GAAG,IAAIf,IAAI,CAACW,IAAI,CAACI,QAAQ,CAAC;QACxC,OACIA,QAAQ,IAAId,cAAc,CAACF,GAAG,CAAC,IAC/BgB,QAAQ,IAAI,IAAIf,IAAI,CAACC,cAAc,CAACF,GAAG,CAAC,CAACkB,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;MAErF;MAEA,IAAInB,MAAM,KAAK,qBAAqB,EAAE;QAClC,MAAMiB,QAAQ,GAAG,IAAIf,IAAI,CAACW,IAAI,CAACI,QAAQ,CAAC;QACxC,OACIA,QAAQ,IAAIN,eAAe,CAACV,GAAG,CAAC,IAChCgB,QAAQ,CAACG,QAAQ,CAAC,CAAC,KAAKnB,GAAG,CAACmB,QAAQ,CAAC,CAAC;MAE9C;MAEA,OAAO,IAAI;IACf,CAAC,CAAC;IAEF5B,gBAAgB,CAACuB,QAAQ,CAAC;EAC9B,CAAC;EAED,oBACIzB,OAAA;IAAK+B,SAAS,EAAC,cAAc;IAAAC,QAAA,gBACzBhC,OAAA;MAAI+B,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDpC,OAAA;MAAK+B,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3BhC,OAAA;QACI+B,SAAS,EAAE,mBAAmB1B,eAAe,GAAG,SAAS,GAAG,EAAE,EACvD;QACPgC,GAAG,EAAC,OAAO;QACXC,GAAG,EAAC,sBAAsB;QAC1BC,OAAO,EAAEhC;MAAe;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,EACD/B,eAAe,iBACZL,OAAA;QAAK+B,SAAS,EAAC,0BAA0B;QAAAC,QAAA,gBACrChC,OAAA;UACI+B,SAAS,EAAC,QAAQ;UAClBQ,OAAO,EAAEA,CAAA,KAAM9B,YAAY,CAAC,cAAc,CAAE;UAAAuB,QAAA,EAC/C;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJpC,OAAA;UACI+B,SAAS,EAAC,QAAQ;UAClBQ,OAAO,EAAEA,CAAA,KAAM9B,YAAY,CAAC,iBAAiB,CAAE;UAAAuB,QAAA,EAClD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJpC,OAAA;UACI+B,SAAS,EAAC,QAAQ;UAClBQ,OAAO,EAAEA,CAAA,KAAM9B,YAAY,CAAC,eAAe,CAAE;UAAAuB,QAAA,EAChD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJpC,OAAA;UACI+B,SAAS,EAAC,QAAQ;UAClBQ,OAAO,EAAEA,CAAA,KAAM9B,YAAY,CAAC,gBAAgB,CAAE;UAAAuB,QAAA,EACjD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJpC,OAAA;UACI+B,SAAS,EAAC,QAAQ;UAClBQ,OAAO,EAAEA,CAAA,KAAM9B,YAAY,CAAC,oBAAoB,CAAE;UAAAuB,QAAA,EACrD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJpC,OAAA;UACI+B,SAAS,EAAC,QAAQ;UAClBQ,OAAO,EAAEA,CAAA,KAAM9B,YAAY,CAAC,qBAAqB,CAAE;UAAAuB,QAAA,EACtD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACjC,EAAA,CAnHQF,WAAW;AAAAuC,EAAA,GAAXvC,WAAW;AAqHpB,eAAeA,WAAW;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}